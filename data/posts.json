[
  {
    "id": 1,
    "title": "Test API Post",
    "content": "This is a test post created via API",
    "slug": "test-api-post",
    "author": "API Tester",
    "tags": ["test", "api"],
    "locale": "en",
    "og_description": "Test blog post for English locale",
    "image": "https://images.unsplash.com/photo-1544383835-bda2bc66a55d?w=1200&h=630&fit=crop",
    "created_at": "2025-10-05T20:07:25.243Z",
    "update_at": "2025-10-05T20:07:25.243Z"
  },
  {
    "id": 2,
    "title": "پست تست فارسی",
    "content": "این یک پست تست به زبان فارسی است که برای آزمایش بخش وبلاگ ایجاد شده است.",
    "slug": "test-farsi-post",
    "author": "حسین حسینی",
    "tags": ["تست", "فارسی", "وبلاگ"],
    "locale": "fa",
    "og_description": "پست تست برای نمایش محتوای فارسی در بخش وبلاگ",
    "image": "https://images.unsplash.com/photo-1544383835-bda2bc66a55d?w=1200&h=630&fit=crop",
    "created_at": "2025-10-06T08:00:00.000Z",
    "update_at": "2025-10-06T08:00:00.000Z"
  },
  {
    "id": 3,
    "title": "معرفی تکنولوژی‌های جدید",
    "content": "در این پست به معرفی آخرین تکنولوژی‌های وب می‌پردازیم و نحوه استفاده از آنها را بررسی می‌کنیم.",
    "slug": "new-technologies-intro",
    "author": "حسین حسینی",
    "tags": ["تکنولوژی", "وب", "برنامه‌نویسی"],
    "locale": "fa",
    "og_description": "آشنایی با جدیدترین تکنولوژی‌های توسعه وب",
    "image": "https://images.unsplash.com/photo-1544383835-bda2bc66a55d?w=1200&h=630&fit=crop",
    "created_at": "2025-10-06T10:30:00.000Z",
    "update_at": "2025-10-06T10:30:00.000Z"
  },
  {
    "id": 4,
    "title": "Post di test italiano",
    "content": "Questo è un post di test in italiano per verificare il funzionamento del blog multilingue.",
    "slug": "test-italian-post",
    "author": "Hossein Hosseini",
    "tags": ["test", "italiano", "blog"],
    "locale": "it",
    "og_description": "Post di test per la sezione blog in italiano",
    "image": "https://images.unsplash.com/photo-1544383835-bda2bc66a55d?w=1200&h=630&fit=crop",
    "created_at": "2025-10-06T12:00:00.000Z",
    "update_at": "2025-10-06T12:00:00.000Z"
  },
  {
    "id": 5,
    "title": "تفاوت پایگاه‌داده‌های رابطه‌ای و غیررابطه‌ای",
    "content": "{\"time\":1729890000000,\"blocks\":[{\"id\":\"Fa1Db2Rl3\",\"type\":\"header\",\"data\":{\"text\":\"پایگاه‌داده رابطه‌ای در برابر غیررابطه‌ای\",\"level\":1}},{\"id\":\"Tr4Ns5Pn6\",\"type\":\"paragraph\",\"data\":{\"text\":\"پایگاه‌داده‌ها اساس بیشتر نرم‌افزارهای مدرن هستند. درک تفاوت میان <b>پایگاه‌داده‌های رابطه‌ای (SQL)</b> و <b>غیررابطه‌ای (NoSQL)</b> به شما کمک می‌کند تا در طراحی یا انتخاب راهکار ذخیره‌سازی داده تصمیم‌های هوشمندانه‌تری بگیرید.\"}},{\"id\":\"Rl7At8Nd7\",\"type\":\"header\",\"data\":{\"text\":\"پایگاه‌داده رابطه‌ای چیست؟\",\"level\":2}},{\"id\":\"Db9Ql0As8\",\"type\":\"paragraph\",\"data\":{\"text\":\"پایگاه‌داده رابطه‌ای داده‌ها را در جدول‌هایی شامل سطر و ستون ذخیره می‌کند. هر جدول نمایانگر یک موجودیت (مانند کاربران یا سفارشات) است و ارتباط میان آن‌ها از طریق کلیدها تعریف می‌شود. از نمونه‌های معروف می‌توان به <b>MySQL</b>، <b>PostgreSQL</b> و <b>Oracle</b> اشاره کرد.\"}},{\"id\":\"Sf1Et2Gh9\",\"type\":\"list\",\"data\":{\"style\":\"unordered\",\"items\":[\"دارای ساختار از پیش‌تعریف‌شده (Schema) است.\",\"از تراکنش‌های ACID پشتیبانی می‌کند.\",\"برای داده‌های ساخت‌یافته و کوئری‌های پیچیده مناسب است.\"]}},{\"id\":\"No5Rl6Db1\",\"type\":\"header\",\"data\":{\"text\":\"پایگاه‌داده غیررابطه‌ای چیست؟\",\"level\":2}},{\"id\":\"Os7Pq8Lt2\",\"type\":\"paragraph\",\"data\":{\"text\":\"پایگاه‌داده‌های غیررابطه‌ای (NoSQL) از ساختارهای منعطف مانند کلید-مقدار، سند (Document)، گراف یا ستون‌های گسترده برای ذخیره داده استفاده می‌کنند. این نوع پایگاه‌داده برای مقیاس‌پذیری افقی و داده‌های نیمه‌ساخت‌یافته طراحی شده است. نمونه‌ها شامل <b>MongoDB</b>، <b>Cassandra</b> و <b>Redis</b> می‌شوند.\"}},{\"id\":\"Pk9Mn0Lv3\",\"type\":\"list\",\"data\":{\"style\":\"unordered\",\"items\":[\"بدون ساختار ثابت یا دارای ساختار پویا است.\",\"برای سیستم‌های توزیع‌شده و مقیاس‌پذیری افقی بهینه شده است.\",\"مناسب برای حجم بالای داده یا برنامه‌های بلادرنگ است.\"]}},{\"id\":\"Dl6Ev7Rt5\",\"type\":\"delimiter\",\"data\":{}},{\"id\":\"Tb8Al9Pn6\",\"type\":\"header\",\"data\":{\"text\":\"جدول مقایسه\",\"level\":2}},{\"id\":\"Qw9Er0Tn7\",\"type\":\"table\",\"data\":{\"withHeadings\":true,\"content\":[[\"ویژگی\",\"رابطه‌ای (SQL)\",\"غیررابطه‌ای (NoSQL)\"],[\"ساختار داده\",\"جدول با سطر و ستون\",\"سند، کلید-مقدار، گراف\"],[\"Schema\",\"ثابت و از پیش‌تعریف‌شده\",\"منعطف و پویا\"],[\"مقیاس‌پذیری\",\"عمودی\",\"افقی\"],[\"نمونه‌ها\",\"MySQL، PostgreSQL\",\"MongoDB، Redis\"]]}},{\"id\":\"Nm1Yp2Hr8\",\"type\":\"header\",\"data\":{\"text\":\"چه زمانی از هرکدام استفاده کنیم\",\"level\":2}},{\"id\":\"Ht3Pr4Fl9\",\"type\":\"checklist\",\"data\":{\"items\":[{\"text\":\"زمانی که ساختار داده پایدار است از رابطه‌ای استفاده کنید.\",\"checked\":false},{\"text\":\"زمانی که با داده‌های حجیم کار می‌کنید از غیررابطه‌ای استفاده کنید.\",\"checked\":false},{\"text\":\"می‌توان از ترکیب هر دو بهره برد.\",\"checked\":false}]}},{\"id\":\"Rq5Ls6Mw0\",\"type\":\"quote\",\"data\":{\"text\":\"انتخاب بین SQL و NoSQL مسئله درست یا غلط نیست؛ بلکه تطبیق ابزار با نیاز است.\",\"caption\":\"اصل طراحی پایگاه‌داده\",\"alignment\":\"left\"}},{\"id\":\"Zp7Jq8Ds1\",\"type\":\"header\",\"data\":{\"text\":\"جمع‌بندی\",\"level\":2}},{\"id\":\"Lp9Tr0As2\",\"type\":\"paragraph\",\"data\":{\"text\":\"هر دو نوع پایگاه‌داده نقش مهمی در دنیای داده دارند. شناخت مزایا و محدودیت‌های هرکدام باعث می‌شود سیستم‌هایی کارآمدتر طراحی کنید.\"}}],\"version\":\"2.29.0\"}",
    "slug": "database-relational-vs-non-relational",
    "author": "حسین حسینی",
    "tags": ["پایگاه‌داده", "SQL", "NoSQL", "تکنولوژی"],
    "locale": "fa",
    "og_description": "با تفاوت‌های کلیدی بین پایگاه‌داده‌های رابطه‌ای (SQL) و غیررابطه‌ای (NoSQL) آشنا شوید",
    "image": "https://images.unsplash.com/photo-1544383835-bda2bc66a55d?w=1200&h=630&fit=crop",
    "created_at": "2025-10-25T10:12:52.312Z",
    "update_at": "2025-10-25T10:12:52.312Z"
  },
  {
    "id": 6,
    "title": "Relational vs Non-Relational Databases",
    "content": "{\"time\":1730000000000,\"blocks\":[{\"id\":\"h1\",\"type\":\"header\",\"data\":{\"text\":\"Relational vs Non-Relational Databases\",\"level\":1}},{\"id\":\"intro\",\"type\":\"paragraph\",\"data\":{\"text\":\"Databases are the backbone of every software system. Choosing the right type—relational or non-relational—affects scalability, flexibility, and data consistency.\"}},{\"id\":\"header1\",\"type\":\"header\",\"data\":{\"text\":\"1. What is a Relational Database?\",\"level\":2}},{\"id\":\"relational\",\"type\":\"paragraph\",\"data\":{\"text\":\"A relational database stores data in structured tables (rows and columns). Each table has a predefined schema and relationships between tables are established using keys (primary and foreign).\"}},{\"id\":\"examples1\",\"type\":\"list\",\"data\":{\"style\":\"unordered\",\"items\":[\"MySQL\",\"PostgreSQL\",\"Oracle Database\",\"SQL Server\"]}},{\"id\":\"header2\",\"type\":\"header\",\"data\":{\"text\":\"2. What is a Non-Relational Database?\",\"level\":2}},{\"id\":\"nonrelational\",\"type\":\"paragraph\",\"data\":{\"text\":\"Non-relational (NoSQL) databases store data in flexible formats such as documents, key-value pairs, graphs, or columns. They do not rely on strict schemas and are optimized for scalability and performance.\"}},{\"id\":\"examples2\",\"type\":\"list\",\"data\":{\"style\":\"unordered\",\"items\":[\"MongoDB (Document)\",\"Redis (Key-Value)\",\"Neo4j (Graph)\",\"Cassandra (Wide-Column)\"]}},{\"id\":\"table1\",\"type\":\"table\",\"data\":{\"content\":[[\"Aspect\",\"Relational DB\",\"Non-Relational DB\"],[\"Structure\",\"Tables with fixed schema\",\"Flexible documents or key-value pairs\"],[\"Scalability\",\"Vertical (scale up)\",\"Horizontal (scale out)\"],[\"Query Language\",\"SQL\",\"Varies (e.g., JSON queries)\"],[\"Best For\",\"Structured data with strong relationships\",\"Unstructured or high-volume data\"]]}},{\"id\":\"header3\",\"type\":\"header\",\"data\":{\"text\":\"3. Pros and Cons\",\"level\":2}},{\"id\":\"proscons\",\"type\":\"list\",\"data\":{\"style\":\"unordered\",\"items\":[\"Relational: Strong consistency, mature tools, but less scalable.\",\"Non-Relational: Highly scalable and flexible, but weaker ACID guarantees.\"]}},{\"id\":\"image1\",\"type\":\"image\",\"data\":{\"file\":{\"url\":\"/assets/work/db-types-diagram.png\"},\"caption\":\"Visual representation of relational vs non-relational structures\",\"withBorder\":true,\"stretched\":false,\"withBackground\":false}},{\"id\":\"quote1\",\"type\":\"quote\",\"data\":{\"text\":\"Choose relational databases when consistency matters. Choose non-relational when scalability rules.\",\"caption\":\"Practical Advice\"}},{\"id\":\"header4\",\"type\":\"header\",\"data\":{\"text\":\"4. When to Use Which?\",\"level\":2}},{\"id\":\"whenuse\",\"type\":\"paragraph\",\"data\":{\"text\":\"Use relational databases for financial systems, accounting, and inventory where transactions must be accurate. Use non-relational databases for analytics, IoT, or content-heavy apps requiring fast scalability.\"}},{\"id\":\"conclusion\",\"type\":\"paragraph\",\"data\":{\"text\":\"The right choice depends on your project’s data structure and growth expectations. Modern architectures often combine both types using hybrid approaches.\"}}],\"version\":\"2.29.0\"}",
    "slug": "relational-vs-nonrelational-db",
    "author": "Hossein Hosseini",
    "tags": ["database", "sql", "nosql"],
    "locale": "en",
    "og_description": "Learn the key differences between relational and non-relational databases, their structures, and when to use each for your project.",
    "image": "https://images.unsplash.com/photo-1544383835-bda2bc66a55d?w=1200&h=630&fit=crop",
    "created_at": "2025-10-25T10:21:04.731Z",
    "update_at": "2025-10-25T10:21:04.731Z"
  }
]
